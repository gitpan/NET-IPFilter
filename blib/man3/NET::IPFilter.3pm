.\" Automatically generated by Pod::Man 2.12 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "NET::IPFilter 3"
.TH NET::IPFilter 3 "2008-02-23" "perl v5.8.8" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
NET::IPFilter \- Perl extension for Accessing eMule / Bittorrent IPFilter.dat Files and checking a given IP against this ipfilter.dat IP Range. IT uses conversion from IP to long integers in Perl and afterwards compairing these long integer
ranges against the calculated number of the given IP
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use NET::IPFilter;
\&
\& my $ipfilter = '/home/user/files/ipfilter.dat';
\& my $IP = "3.3.19.81"; # :)
\&
\& my $obj = NET::IPFilter\->new(  ipfilter        => $ipfilter,
\&                                tmpdir          => '/var/tmp',
\&                                force_init      => '0'
\&);
\&
\& my $isValid    = $obj\->isValid($IP);   #  1 not to be blocked | 0 to be blocked
\&print $isValid;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
my \f(CW$obj\fR = NET::IPFilter\->new(	ipfilter	=> \f(CW$ipfilter\fR,
				tmpdir		=> '/var/tmp',
				force_init	=> '0'
);
.PP
ipfilter can be an absolute file in the filesystem or an uri. the uri filename can be a normal textfile
or a gzip compressed file
.PP
tmpdir classifies a folder where to store some temporary files
.PP
force_init can be 0 or 1 where 1 means that all files are downloaded again ( if uri is an http-link )
.PP
This current version is intended to be used on Linux/Unix \s-1OS\s0 System. My new Version NET::IPFilterSimple will be
usable for both Linux/Unix and Debian. As i have no solaris or \s-1MAC\s0 i dont know how to fix the module to bring it to
life on that mashines
.Sh "\s-1DEPENDENCIE\s0"
.IX Subsection "DEPENDENCIE"
use Carp;
use strict;
use 5.008008;
use HTTP::Request;
use LWP::UserAgent;
use Compress::Zlib;
use Fcntl ':flock';
.Sh "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
.Vb 1
\&        beautifyRawIPfromIPFilter \- this function beautifies ips in the form of 222.223.208.000 to 222.223.208.000 \- not used in programm
\&
\&        readIPFilterFile \- this is the function that reads and simply preparses the ipfilter.dat file
\&        
\&        httpGetStore \- function that downloads the ipfilter.dat file if the uri is an http link
\&        
\&        _ip2long \- transfers an ip to a long var ( in perl its a long integer )
\&
\&        _long2ip \- transfers an long integer back to an ip adress \- not used in programm
\&
\&        isValid \- checks a given ip against the ipfilter.dat file
\&
\&        gunzip \- uncompression of an gzipped/zipped ipfilter.dat file in the form of ipfilter.dat.gz
\&
\&        _init \- initialising functions
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
eMule | BitTorrent | Torrent Sites using ipfilter.dat perl modules
.PP
http://www.zoozle.net
.PP
http://www.zoozle.org
.PP
http://www.zoozle.biz
.PP
http://search.cpan.org/author/SENGER/
.PP
NET::IPFilterSimple
.SH "AUTHOR"
.IX Header "AUTHOR"
Sebastian Enger, bigfish82 |A\*~Xt! gmail?com
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2008 by Sebastian Enger
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.8 or,
at your option, any later version of Perl 5 you may have available.
.PP
If you find an algorithm that is faster then mine than please send it to my 
email address.
.PP
Currently i am going to release a module NET::IPFilterSimple that i hope is some ms faster than NET::IPFilter
